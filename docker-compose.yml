services:
  # Base de données PostgreSQL
  candiflow-db:
    image: postgres:16-alpine
    container_name: candiflow-db
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-candiflow}
      POSTGRES_USER: ${POSTGRES_USER:-candiflow}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-candiflow}
    volumes:
      - candiflow-pgdata:/var/lib/postgresql/data
      - ./candiflow-db/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-candiflow} -d ${POSTGRES_DB:-candiflow}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - candiflow-net

  # Backend Spring Boot
  candiflow-api:
    build:
      context: ./candiflow-api
      dockerfile: Dockerfile
    container_name: candiflow-api
    ports:
      - "8080:8080"
    environment:
      # Configuration de la base de données
      SPRING_DATASOURCE_URL: jdbc:postgresql://candiflow-db:5432/${POSTGRES_DB:-candiflow}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-candiflow}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-candiflow}
      # Configuration de l'application
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}
      # Configuration de sécurité
      JWT_SECRET: ${JWT_SECRET:-candiflowSecretKey}
      JWT_EXPIRATION_MS: ${JWT_EXPIRATION_MS:-86400000}
      # Configuration CORS pour le frontend
      ALLOWED_ORIGINS: http://localhost:19006,http://candiflow-ui:19006
    depends_on:
      candiflow-db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - candiflow-net
      
  # Frontend avec Nginx (build statique)
  candiflow-ui:
    build:
      context: ./candiflow-ui
      dockerfile: Dockerfile
    container_name: candiflow-ui
    ports:
      - "80:80"  # Port Nginx
    environment:
      # URL de l'API backend
      EXPO_PUBLIC_API_URL: http://candiflow-api:8080
    depends_on:
      - candiflow-api
    restart: unless-stopped
    networks:
      - candiflow-net

# Déclaration des volumes et réseaux (inchangé)
volumes:
  candiflow-pgdata:

networks:
  candiflow-net:
    driver: bridge
